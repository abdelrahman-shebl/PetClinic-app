name: Petclinic pipelines
on: 
    workflow_dispatch: 
    push: 
      branches: 
        - 'main'
        - 'feature/*'
permissions:
      contents: write 
      
jobs: 
    Sonar-Qube-Testing:
      defaults:
        run:
          working-directory: pet-clinic
      name: Build and analyze
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v5
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 21
          uses: actions/setup-java@v5
          with:
            java-version: 21
            distribution: 'temurin' # Alternative distribution options are available.
        - name: Cache SonarQube packages
          uses: actions/cache@v4 
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

        - name: Buid and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: mvn -B test -Dtest=\!PostgresIntegrationTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=petclinic


    # Unit-testing:
    #     defaults:
    #       run:
    #         working-directory: pet-clinic
    #     runs-on: ubuntu-latest   

    #     steps:
    #     - name: checkout code
    #       uses: actions/checkout@v5

    #     - name: Installing Java
    #       uses: actions/setup-java@v5
    #       with:
    #         distribution: 'temurin' 
    #         java-version: '21'
    #         cache: maven  

    #     - name: Run tests 
    #       run: mvn test -Dtest=!PostgresIntegrationTests

    #     - name: Uploading test results
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: JUnit Tests
    #         path: |
    #           pet-clinic/target/surefire-reports/*.xml
    #           pet-clinic/target/failsafe-reports/*.xml

    #     - name: Publish test results
    #       uses: mikepenz/action-junit-report@v4
    #       if: always() 
    #       with:
    #         report_paths: |
    #           pet-clinic/target/surefire-reports/*.xml
    #           pet-clinic/target/failsafe-reports/*.xml


    Docker-build-push:

        needs: Sonar-Qube-Testing

        runs-on: ubuntu-latest   
        steps:

        - name: checkout code
          uses: actions/checkout@v5
          # with:
          #   path: pet-clinic

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with: 
            context: ./pet-clinic         
            file: ./pet-clinic/Dockerfile
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/petclinic:${{github.sha}}  #pipeline_id


    Deploy:
    
        runs-on: ubuntu-latest
        needs: Docker-build-push
        steps:
            - name: checkout code
              uses: actions/checkout@v5
              # with:
              #   repository: abdelrahman-shebl/PetClinic-app
              #   token: ${{ secrets.GH_PAT}}

            - name: Update K8s Manifests
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '{'
                tokenSuffix: '}'
                files: '["K8s/Deployments/app-deployment.yml"]'
              env:
                IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/petclinic:${{github.sha}} 

            - name: push to the remote repository
              uses: stefanzweifel/git-auto-commit-action@v6
              with: 

                commit_message: "Update image to ${{ github.sha }}"
              env:
                GITHUB_TOKEN: ${{ secrets.GH_PAT }}